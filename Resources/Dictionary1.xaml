<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    

    <Style TargetType="Border" x:Key="BorderStyle">
        <Setter Property="Margin" Value="10"></Setter>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"></Setter>
        <Setter Property="CornerRadius" Value="15"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect RenderingBias="Quality"
                                  Direction="290"></DropShadowEffect>
            </Setter.Value>
        </Setter>
    </Style>

    <system:Double x:Key="TitleBarHeight">25</system:Double>

    <Style x:Key="TbStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentControl Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image Source="/Resources/icons8-sort-amount-up-32.png"
                                           Stretch="None"></Image>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image Source="/Resources/icons8-ascending-sorting-32.png"
                                           Stretch="None"></Image>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox Style-->

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="Transparent" />

    <SolidColorBrush x:Key="MainColor" Color="DeepSkyBlue"/>
    <SolidColorBrush x:Key="MainColorDark" Color="#00A7DF"/>

    <SolidColorBrush x:Key="BorderMainBrush" Color="White"/>
    <SolidColorBrush x:Key="BorderDarkMainBrush" Color="White"/>

    <SolidColorBrush x:Key="BackgroundGrayDark" Color="Transparent"/>
    <SolidColorBrush x:Key="BackgroundGrayLight" Color="Transparent"/>

    <SolidColorBrush x:Key="ForegroundDisabledBrush" Color="DimGray"/>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border" SnapsToDevicePixels="True" Grid.ColumnSpan="2" Background="{DynamicResource BackgroundGrayDark}" BorderBrush="{DynamicResource ForegroundColor}" BorderThickness="1"  CornerRadius="3"/>
                <Border x:Name="Border2" Grid.Column="0" SnapsToDevicePixels="True" Margin="1" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{DynamicResource ForegroundColor}" BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{DynamicResource ForegroundColor}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource MainColor}" />
                    <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MainColor}" />
                    <Setter Property="BorderBrush" TargetName="Border2" Value="{DynamicResource MainColor}" />
                    <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource ForegroundColor}" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="Transparent" />
                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource MainColorDark}" />
                    <Setter Property="BorderBrush" TargetName="Border2" Value="{StaticResource MainColorDark}" />
                    <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource ForegroundColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource BackgroundGrayLight}" />
                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderMainBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource ForegroundDisabledBrush}" />
                </Trigger>
                <DataTrigger Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" Value="True">
                    <Setter Property="Background" TargetName="Border" Value="Transparent" />
                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource MainColorDark}" />
                    <Setter Property="BorderBrush" TargetName="Border2" Value="{StaticResource MainColorDark}" />
                    <Setter Property="Fill" TargetName="Arrow" Value="White" />
                </DataTrigger >
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Focusable="False"/>
        </ControlTemplate>

    <Style TargetType="ComboBox">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton"
                                      Grid.Column="2" 
                                      ClickMode="Press" 
                                      Focusable="false"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{StaticResource ComboBoxToggleButton}"/>

                            <ContentPresenter Margin="3,3,23,3" Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              HorizontalAlignment="Left" 
                                              IsHitTestVisible="False"
                                              x:Name="ContentSite"
                                              VerticalAlignment="Center"/>

                        <TextBox Style="{x:Null}"
                                 x:Name="PART_EditableTextBox"
                                 Margin="3,3,23,3"
                                 Background="Transparent"
                                 Focusable="True" 
                                 HorizontalAlignment="Left" 
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 VerticalAlignment="Center"
                                 Visibility="Hidden"
                                 Foreground="White"/>

                        <Popup AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               x:Name="Popup" 
                               Placement="Bottom"
                               PopupAnimation="Fade">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  x:Name="DropDown"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource BackgroundColor}" 
                                        BorderBrush="{DynamicResource ForegroundColor}"
                                        BorderThickness="1"
                                        CornerRadius="0" />
                                <ScrollViewer Margin="2"
                                              SnapsToDevicePixels="True">
                                    <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" 
                                                IsItemsHost="True"
                                                TextBlock.Foreground="{DynamicResource ForegroundColor}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden" />
                            <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FontStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border"
                            Background="Transparent"
                            BorderBrush="{DynamicResource ForegroundColor}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True"
                            BorderThickness="1"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Opacity=".5">
                        <ContentControl Content="{TemplateBinding Content}"
                                        Foreground="{DynamicResource ForegroundColor}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Name="Content">

                        </ContentControl>
                    </Border>
                    <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="Border"
                                                             From=".5"
                                                             To="1"
                                                             Duration="0:0:0.1"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="Border"
                                                             From="1"
                                                             To=".5"
                                                             Duration="0:0:0.1"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Background" TargetName="Border" Value="Transparent"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Opacity" TargetName="Border" Value=".5"></Setter>
                                <Setter Property="Background" TargetName="Border" Value="Transparent"></Setter>
                            </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource ForegroundColor}"></Setter>
                            <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource BackgroundColor}"></Setter>
                        </Trigger>
                        </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="BackgroundButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border"
                            Background="Transparent"
                            BorderBrush="White"
                            CornerRadius="2"
                            SnapsToDevicePixels="True"
                            BorderThickness="1"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentControl Content="{TemplateBinding Content}"
                                        Foreground="White"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">

                        </ContentControl>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="Gray"></Setter>
                            <Setter Property="BorderBrush" TargetName="Border" Value="Gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="CaretBrush" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="Transparent"
                            BorderBrush="White"
                            BorderThickness="1"
                            CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontSize="{TemplateBinding FontSize}"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="LabelStyle">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
    </Style>

    
    
</ResourceDictionary>